---
# Source: testserver/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: testserver
  labels:
    helm.sh/chart: testserver-0.9.50
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
    app.kubernetes.io/version: "0.9.50"
    app.kubernetes.io/managed-by: Helm
---
# Source: testserver/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: testserver
  labels:
    helm.sh/chart: testserver-0.9.50
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
    app.kubernetes.io/version: "0.9.50"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
---
# Source: testserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testserver
  labels:
    helm.sh/chart: testserver-0.9.50
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
    app.kubernetes.io/version: "0.9.50"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: testserver
      app.kubernetes.io/instance: testserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: testserver
        app.kubernetes.io/instance: testserver
    spec:
      serviceAccountName: testserver
      securityContext:
        {}
      containers:
        - name: testserver
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "cgerull/testserver:0.9.50"
          imagePullPolicy: IfNotPresent
          env:
            - name: SECRET_KEY
              value: DevHelmChartSecret
            - name: ENV
              value: dev-local
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: instance
              mountPath: /home/web/instance
            - name: testsecret
              mountPath: /run/secret/my-secret
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http

          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 20m
              memory: 72Mi
      volumes:
        - name: tmp
          emptyDir: {}
        - name: instance
          emptyDir: {}
        - name: testsecret
          secret:
            secretName: testserver
---
# Source: testserver/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: testserver
  labels:
    helm.sh/chart: testserver-0.9.50
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
    app.kubernetes.io/version: "0.9.50"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: testserver
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
# Source: testserver/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testserver
  labels:
    helm.sh/chart: testserver-0.9.50
    app.kubernetes.io/name: testserver
    app.kubernetes.io/instance: testserver
    app.kubernetes.io/version: "0.9.50"
    app.kubernetes.io/managed-by: Helm
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: "testserver.dev.local"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: testserver
                port:
                  number: 80
